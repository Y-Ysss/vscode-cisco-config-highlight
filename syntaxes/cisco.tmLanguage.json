{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Cisco Config",
	"patterns": [
		{
			"include": "#unused"
		},
		{
			"include": "#comment"
		},
		{
			"include": "#interface_type"
		},
		{
			"include": "#interface"
		},
		{
			"include": "#vrf"
		},
		{
			"include": "#string"
		},
		{
			"include": "#group"
		},
		{
			"include": "#acl"
		},
		{
			"include": "#crypto"
		},
		{
			"include": "#address"
		},
		{
			"include": "#command_hostname"
		},
		{
			"include": "#numeric"
		},
		{
			"comment": "bgp must be placed after address. {neighbor [peer-group-name or ip-address]}",
			"include": "#bgp"
		},
		{
			"include": "#keyword"
		},
		{
			"include": "#param1"
		},
		{
			"include": "#param1"
		}
	],
	"repository": {
		"keyword": {
			"patterns": [
				{
					"name": "keyword.other.config-keyword.vlan.cisco",
					"match": "(^|\\s)(protocol-vlan|mac-vlan|dot1q-tunnel|dot1Q)(?=\\s|$)"
				},
				{
					"name": "keyword.other.config-keyword.switchport-mode.cisco",
					"match": "(^|\\s)(access|trunk|(dynamic\\s(auto|desirable)))(?=\\s|$)"
				},
				{
					"name": "keyword.other.config-keyword.add-remove.cisco",
					"match": "(^|\\s)(add|remove|except)(?=\\s|$)"
				},
				{
					"name": "keyword.other.config-keyword.allowed-native.cisco",
					"match": "(^|\\s)(allowed|native)(?=\\s|$)"
				},
				{
					"name": "keyword.other.config-keyword.any-all.cisco",
					"match": "(^|\\s)(any|all)(?=\\s|$)"
				},
				{
					"name": "keyword.other.config-keyword.permit-deny.cisco",
					"match": "(^|\\s)(permit|deny)(?=\\s|$)"
				},
				{
					"name": "keyword.other.config-keyword.status.cisco",
					"match": "(^|\\s)([Uu]p|[Dd]own|[Dd]eleted|[Aa]dministratively(-down)?)(?=\\s|$)"
				},
				{
					"name": "keyword.other.config-keyword.match.cisco",
					"match": "(^|\\s)(match-(any|all))(?=\\s|$)"
				},
				{
					"name": "keyword.other.config-keyword.in-out.cisco",
					"match": "(^|\\s)(in|out)(?=\\s|$)"
				},
				{
					"name": "keyword.other.config-keyword.input-output.cisco",
					"match": "(^|\\s)(input|output)(?=\\s|$)"
				},
				{
					"name": "keyword.other.config-keyword.inside-outside.cisco",
					"match": "(^|\\s)(inside|outside)(?=\\s|$)"
				},
				{
					"name": "keyword.other.config-keyword.shutdown.cisco",
					"match": "(^|\\s)(shutdown)(?=\\b|$)"
				}
			]
		},
		"interface_type": {
			"patterns": [
				{
					"include": "#ethernet"
				},
				{
					"include": "#wireless"
				},
				{
					"include": "#loopback"
				},
				{
					"include": "#port-channel"
				},
				{
					"include": "#tunnel"
				},
				{
					"include": "#vlan"
				},
				{
					"include": "#null"
				},
				{
					"include": "#serial"
				},
				{
					"include": "#cellular"
				},
				{
					"include": "#virtual-template"
				},
				{
					"include": "#dialer"
				},
				{
					"include": "#async"
				},
				{
					"include": "#bri"
				},
				{
					"include": "#bvi"
				}
			],
			"repository": {
				"ethernet": {
					"name": "entity.name.class.interface.ethernet.cisco",
					"match": "\\b(([Ff]ast|([Ff]ive|[Tt]en|[Ff]orty)?[Gg]igabit)?[Ee]thernet|Fa|Gi|Te|Fo)(((\\d+[\\./])*)?\\d+(\\.\\d+)?)?\\b"
				},
				"wireless": {
					"name": "entity.name.class.interface.wireless.cisco",
					"match": "\\b([Dd]ot11[Rr]adio)(([0-1]([\\./]\\d)?(\\.\\d+)?)\\b(\\.\\d+)?)?\\b"
				},
				"loopback": {
					"name": "entity.name.class.interface.loopback.cisco",
					"match": "\\b([Ll]oopback|Lo)(\\d+)?\\b"
				},
				"port-channel": {
					"name": "entity.name.class.interface.portchannel.cisco",
					"match": "\\b([Pp]ort-channel|Po)(12[0-8]|1[0-1][0-9]|[1-9][0-9]|[1-9])?\\b"
				},
				"tunnel": {
					"name": "entity.name.class.interface.tunnel.cisco",
					"match": "\\b([Tt]unnel|Tu)(\\d+)?\\b"
				},
				"vlan": {
					"name": "entity.name.class.interface.vlan.cisco",
					"match": "\\b(VLAN|[Vv]lan)(409[0-4]|40[0-8][0-9]|[1-3][0-9]{3}|[1-9][0-9]{1,2}|[1-9])?\\b"
				},
				"null": {
					"name": "entity.name.class.interface.null.cisco",
					"match": "\\b([Nn]ull)(\\d+)?\\b"
				},
				"serial": {
					"name": "entity.name.class.interface.serial.cisco",
					"match": "\\b([Ss]erial)(((\\d+[\\./])*)?\\d+(\\.\\d+)?)?\\b"
				},
				"cellular": {
					"name": "entity.name.class.interface.cellular.cisco",
					"match": "\\b([Cc]ellular)(((\\d+[\\./])*)?\\d+(\\.\\d+)?)?\\b"
				},
				"virtual-template": {
					"name": "entity.name.class.interface.virtual-template.cisco",
					"match": "\\b([Vv]irtual-[Tt]emplate)(\\d+)?\\b"
				},
				"dialer": {
					"name": "entity.name.class.interface.dialer.cisco",
					"match": "\\b([Dd]ialer)(\\d+)?\\b"
				},
				"async": {
					"name": "entity.name.class.interface.async.cisco",
					"match": "\\b([Aa]sync)(\\d+)?\\b"
				},
				"bri": {
					"name": "entity.name.class.interface.bri.cisco",
					"match": "\\b(BRI)(\\d+)?\\b"
				},
				"bvi": {
					"name": "entity.name.class.interface.bvi.cisco",
					"match": "\\b(BVI)(\\d+)?\\b"
				}
			}
		},
		"numeric": {
			"patterns": [
				{
					"include": "#integer"
				},
				{
					"include": "#hex"
				}
			],
			"repository": {
				"hex": {
					"name": "constant.numeric.hex.cisco",
					"match": "\\b(0x)?[0-9A-F]{2}+?\\b"
				},
				"integer": {
					"name": "constant.numeric.integer.cisco",
					"match": "\\b-?\\d+\\b"
				}
			}
		},
		"comment": {
			"patterns": [
				{
					"name": "comment.line.config.cisco",
					"match": "^\\s*!.*"
				}
			]
		},
		"address": {
			"patterns": [
				{
					"include": "#cidr"
				},
				{
					"include": "#ipv4-full"
				},
				{
					"include": "#ipv6-condensed"
				},
				{
					"include": "#ipv6-full"
				},
				{
					"include": "#mac"
				}
			],
			"repository": {
				"cidr": {
					"name": "keyword.other.address.ipv4.cidr.cisco",
					"match": "\\b((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])/(\\d|[1-2]\\d|3[0-2])\\b"
				},
				"ipv4-full": {
					"name": "keyword.other.address.ipv4.full.cisco",
					"match": "\\b((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\\b"
				},
				"ipv6-condensed": {
					"name": "keyword.other.address.ipv6.condensed.cisco",
					"match": "\\b(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))\\b"
				},
				"ipv6-full": {
					"name": "keyword.other.address.ipv6.full.cisco",
					"match": "\\b([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}\\b"
				},
				"mac": {
					"name": "keyword.other.address.mac.cisco",
					"match": "\\b([a-fA-F0-9]{2}[:.-]?){5}[a-fA-F0-9]{2}\\b"
				}
			}
		},
		"command_hostname": {
			"patterns": [
				{
					"name": "meta.function-call.command_hostname.user-mode.cisco",
					"match": "^(?!\\s)[0-9a-zA-Z\\-]+(\\(.*\\))?#"
				},
				{
					"name": "meta.function-call.command_hostname.privileged-mode.cisco",
					"match": "^(?!\\s)[0-9a-zA-Z\\-]+(\\(.*\\))?>"
				}
			]
		},
		"param1": {
			"patterns": [
				{
					"name": "punctuation.config-param.first.cisco",
					"match": "(?<=^\\s*?)\\S+"
				}
			]
		},
		"vrf": {
			"patterns": [
				{
					"comment": "((?<=vrf\\s)(?!.*forwarding)|(?<=vrf\\sforwarding\\s))\\S+",
					"match": "(vrf)\\s((forwarding|definition)\\s)?(\\S+)",
					"captures": {
						"1": {
							"name": "entity.name.class.vrf.declaration.cisco"
						},
						"2": {
							"name": "entity.other.vrf.forwarding.cisco"
						},
						"3": {
							"name": "entity.other.vrf.definition.cisco"
						},
						"4": {
							"name": "entity.name.tag.vrf.vrf-name.cisco"
						}
					}
				}
			]
		},
		"string": {
			"patterns": [
				{
					"include": "#hostname"
				},
				{
					"include": "#description"
				},
				{
					"include": "#remark"
				},
				{
					"include": "#domain-name"
				},
				{
					"include": "#username"
				},
				{
					"include": "#logging-system-message"
				},
				{
					"include": "#password"
				},
				{
					"include": "#banner"
				}
			],
			"repository": {
				"description": {
					"match": "(?<=(description|Description:))\\s(.*)$",
					"name": "string.other.description.cisco"
				},
				"remark": {
					"match": "(?<=remark)\\s(.*)$",
					"name": "string.other.remark.cisco"
				},
				"hostname": {
					"match": "(?<=hostname\\s)[0-9a-zA-Z\\-]+\\b",
					"name": "entity.name.tag.config-string.hostname.cisco"
				},
				"domain-name": {
					"match": "(?<=ip\\sdomain\\sname\\s)\\S+\\b",
					"name": "entity.name.tag.config-string.domain-name.cisco"
				},
				"username": {
					"match": "(?<=username\\s)(\\S+)\\b",
					"name": "entity.name.tag.config-string.username.cisco"
				},
				"logging-system-message": {
					"match": "(?<=%)\\S+-\\d-\\S+(?=:)",
					"name": "entity.name.tag.config-string.logging-system-message.cisco"
				},
				"password": {
					"match": "(?<=password\\s\\d+\\s)(\\S+)$",
					"name": "string.other.password.cisco"
				},
				"banner": {
					"begin": "(?<=banner\\s(exec|login|motd)\\s)\\^",
					"end": "\\^",
					"name": "comment.block.banner.cisco"
				}
			}
		},
		"bgp": {
			"patterns": [
				{
					"include": "#neighbor-peer-group"
				},
				{
					"include": "#peer-session"
				},
				{
					"include": "#peer-policy"
				},
				{
					"include": "#peer-group"
				}
			],
			"repository": {
				"neighbor-peer-group": {
					"match": "(?<=neighbor\\s)(\\S+)\\b",
					"name": "entity.name.tag.bgp.neighbor-peer-group.name.cisco"
				},
				"peer-session": {
					"match": "(?<=peer-session\\s)(\\S+)\\b",
					"name": "entity.name.tag.bgp.peer-session.name.cisco"
				},
				"peer-policy": {
					"match": "(?<=peer-policy\\s)(\\S+)\\b",
					"name": "entity.name.tag.bgp.peer-policy.name.cisco"
				},
				"peer-group": {
					"match": "(?<=peer-group\\s)(\\S+)\\b",
					"name": "entity.name.tag.bgp.peer-group.name.cisco"
				}
			}
		},
		"group": {
			"patterns": [
				{
					"include": "#class"
				},
				{
					"include": "#service-policy"
				},
				{
					"include": "#policy-map"
				},
				{
					"include": "#class-map"
				},
				{
					"include": "#route-map"
				},
				{
					"include": "#prefix-list"
				},
				{
					"include": "#object-group"
				},
				{
					"include": "#pool"
				}
			],
			"repository": {
				"class": {
					"match": "(?<=class\\s(.*\\s)?)(\\S+)$",
					"name": "entity.name.tag.group.class.name.cisco"
				},
				"service-policy": {
					"match": "(?<=service-policy\\s(.*\\s)?)(\\S+)$",
					"name": "entity.name.tag.group.service-policy.name.cisco"
				},
				"policy-map": {
					"match": "(?<=policy-map\\s(.*\\s)?)(\\S+)$",
					"name": "entity.name.tag.group.policy-map.name.cisco"
				},
				"class-map": {
					"match": "(?<=class-map\\s(.*\\s)?)(\\S+)$",
					"name": "entity.name.tag.group.class-map.name.cisco"
				},
				"route-map": {
					"match": "(?<=route-map\\s)(\\S+)\\b",
					"name": "entity.name.tag.group.route-map.name.cisco"
				},
				"prefix-list": {
					"match": "(?<=prefix-list\\s)(\\S+)\\b",
					"name": "entity.name.tag.group.prefix-list.name.cisco"
				},
				"object-group": {
					"match": "(?<=object-group\\s)((service|network)\\s)?(\\S+)\\b",
					"captures": {
						"2": {
							"name": "keyword.other.group.object-group.type.cisco"
						},
						"3": {
							"name": "entity.name.tag.group.object-group.name.cisco"
						}
					}
				},
				"pool": {
					"match": "(?<=pool\\s)(\\S+)\\b",
					"name": "entity.name.tag.group.pool.name.cisco"
				}
			}
		},
		"acl": {
			"patterns": [
				{
					"include": "#access-list"
				},
				{
					"include": "#access-group"
				}
			],
			"repository": {
				"access-list": {
					"match": "(?<=access-list\\s)((extended|standard)\\s)?(\\S+)\\b",
					"captures": {
						"2": {
							"name": "keyword.other.acl.access-list.type.cisco"
						},
						"3": {
							"name": "entity.name.tag.acl.access-list.name.cisco"
						}
					}
				},
				"access-group": {
					"match": "(?<=access-group\\s)((name)\\s)?(\\S+)\\b",
					"captures": {
						"3": {
							"name": "entity.name.tag.acl.access-group.name.cisco"
						}
					}
				}
			}
		},
		"crypto": {
			"patterns": [
				{
					"include": "#crypto-map"
				},
				{
					"include": "#transform-set"
				}
			],
			"repository": {
				"crypto-map": {
					"match": "(?<=crypto\\smap\\s)(\\S+)\\b",
					"name": "entity.name.tag.crypto.crypto-map.name.cisco"
				},
				"transform-set": {
					"match": "(?<=transform-set\\s)(\\S+)\\b",
					"name": "entity.name.tag.crypto.transform-set.name.cisco"
				}
			}
		},
		"unused": {
			"patterns": [
				{
					"include": "#unused"
				},
				{
					"include": "#default"
				}
			],
			"repository": {
				"unused": {
					"name": "meta.function-call.command-disable.unused.cisco",
					"match": "^\\s*?no\\s.*"
				},
				"default": {
					"name": "meta.function-call.command-disable.default.cisco",
					"match": "^\\s*?default\\s.*"
				}
			}
		}
	},
	"scopeName": "source.cisco"
}